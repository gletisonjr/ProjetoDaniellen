//------------------------------------------------------------------------------
// <auto-generated>
//    O código foi gerado a partir de um modelo.
//
//    Alterações manuais neste arquivo podem provocar comportamento inesperado no aplicativo.
//    Alterações manuais neste arquivo serão substituídas se o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region Metadados de Relação EDM

[assembly: EdmRelationshipAttribute("clinicaModel", "FK_BanhoTosa_Paciente", "Paciente", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Historico_Vert.Data.Paciente), "BanhoTosa", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Historico_Vert.Data.BanhoTosa), true)]
[assembly: EdmRelationshipAttribute("clinicaModel", "FK_Paciente_Cliente", "Cliente", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Historico_Vert.Data.Cliente), "Paciente", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Historico_Vert.Data.Paciente), true)]
[assembly: EdmRelationshipAttribute("clinicaModel", "FR_Cliente_Pessoa", "Pessoa", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Historico_Vert.Data.Pessoa), "Cliente", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Historico_Vert.Data.Cliente), true)]
[assembly: EdmRelationshipAttribute("clinicaModel", "FK_EnderecoPessoa_Endereco", "Endereco", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Historico_Vert.Data.Endereco), "EnderecoPessoa", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Historico_Vert.Data.EnderecoPessoa), true)]
[assembly: EdmRelationshipAttribute("clinicaModel", "FK_EnderecoPessoa_Pessoa", "Pessoa", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Historico_Vert.Data.Pessoa), "EnderecoPessoa", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Historico_Vert.Data.EnderecoPessoa), true)]
[assembly: EdmRelationshipAttribute("clinicaModel", "FK_Raca_Especie", "Especie", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Historico_Vert.Data.Especie), "Raca", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Historico_Vert.Data.Raca), true)]
[assembly: EdmRelationshipAttribute("clinicaModel", "FK_Medico_Pessoa", "Pessoa", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Historico_Vert.Data.Pessoa), "Medico", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Historico_Vert.Data.Medico), true)]
[assembly: EdmRelationshipAttribute("clinicaModel", "FK_Prontuario_Medico", "Medico", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Historico_Vert.Data.Medico), "Prontuario", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Historico_Vert.Data.Prontuario), true)]
[assembly: EdmRelationshipAttribute("clinicaModel", "FK_Paciente_Raca", "Raca", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Historico_Vert.Data.Raca), "Paciente", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Historico_Vert.Data.Paciente), true)]
[assembly: EdmRelationshipAttribute("clinicaModel", "FK_Prontuario_Paciente", "Paciente", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Historico_Vert.Data.Paciente), "Prontuario", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Historico_Vert.Data.Prontuario), true)]

#endregion

namespace Historico_Vert.Data
{
    #region Contextos
    
    /// <summary>
    /// Nenhuma Documentação de Metadados disponível.
    /// </summary>
    public partial class clinicaEntities : ObjectContext
    {
        #region Construtores
    
        /// <summary>
        /// Inicializa um novo objeto clinicaEntities usando a cadeia de conexão localizada na seção 'clinicaEntities' do arquivo de configuração do aplicativo.
        /// </summary>
        public clinicaEntities() : base("name=clinicaEntities", "clinicaEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = false;
            OnContextCreated();
        }
    
        /// <summary>
        /// Inicialize um novo objeto clinicaEntities.
        /// </summary>
        public clinicaEntities(string connectionString) : base(connectionString, "clinicaEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = false;
            OnContextCreated();
        }
    
        /// <summary>
        /// Inicialize um novo objeto clinicaEntities.
        /// </summary>
        public clinicaEntities(EntityConnection connection) : base(connection, "clinicaEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = false;
            OnContextCreated();
        }
    
        #endregion
    
        #region Métodos Parciais
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Propriedades de ObjectSet
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        public ObjectSet<BanhoTosa> BanhoTosa
        {
            get
            {
                if ((_BanhoTosa == null))
                {
                    _BanhoTosa = base.CreateObjectSet<BanhoTosa>("BanhoTosa");
                }
                return _BanhoTosa;
            }
        }
        private ObjectSet<BanhoTosa> _BanhoTosa;
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        public ObjectSet<Cliente> Cliente
        {
            get
            {
                if ((_Cliente == null))
                {
                    _Cliente = base.CreateObjectSet<Cliente>("Cliente");
                }
                return _Cliente;
            }
        }
        private ObjectSet<Cliente> _Cliente;
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        public ObjectSet<Endereco> Endereco
        {
            get
            {
                if ((_Endereco == null))
                {
                    _Endereco = base.CreateObjectSet<Endereco>("Endereco");
                }
                return _Endereco;
            }
        }
        private ObjectSet<Endereco> _Endereco;
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        public ObjectSet<EnderecoPessoa> EnderecoPessoa
        {
            get
            {
                if ((_EnderecoPessoa == null))
                {
                    _EnderecoPessoa = base.CreateObjectSet<EnderecoPessoa>("EnderecoPessoa");
                }
                return _EnderecoPessoa;
            }
        }
        private ObjectSet<EnderecoPessoa> _EnderecoPessoa;
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        public ObjectSet<Especie> Especie
        {
            get
            {
                if ((_Especie == null))
                {
                    _Especie = base.CreateObjectSet<Especie>("Especie");
                }
                return _Especie;
            }
        }
        private ObjectSet<Especie> _Especie;
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        public ObjectSet<Medico> Medico
        {
            get
            {
                if ((_Medico == null))
                {
                    _Medico = base.CreateObjectSet<Medico>("Medico");
                }
                return _Medico;
            }
        }
        private ObjectSet<Medico> _Medico;
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        public ObjectSet<Paciente> Paciente
        {
            get
            {
                if ((_Paciente == null))
                {
                    _Paciente = base.CreateObjectSet<Paciente>("Paciente");
                }
                return _Paciente;
            }
        }
        private ObjectSet<Paciente> _Paciente;
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        public ObjectSet<Pessoa> Pessoa
        {
            get
            {
                if ((_Pessoa == null))
                {
                    _Pessoa = base.CreateObjectSet<Pessoa>("Pessoa");
                }
                return _Pessoa;
            }
        }
        private ObjectSet<Pessoa> _Pessoa;
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        public ObjectSet<Prontuario> Prontuario
        {
            get
            {
                if ((_Prontuario == null))
                {
                    _Prontuario = base.CreateObjectSet<Prontuario>("Prontuario");
                }
                return _Prontuario;
            }
        }
        private ObjectSet<Prontuario> _Prontuario;
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        public ObjectSet<Raca> Raca
        {
            get
            {
                if ((_Raca == null))
                {
                    _Raca = base.CreateObjectSet<Raca>("Raca");
                }
                return _Raca;
            }
        }
        private ObjectSet<Raca> _Raca;
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        public ObjectSet<Vacina> Vacina
        {
            get
            {
                if ((_Vacina == null))
                {
                    _Vacina = base.CreateObjectSet<Vacina>("Vacina");
                }
                return _Vacina;
            }
        }
        private ObjectSet<Vacina> _Vacina;

        #endregion

        #region Métodos AddTo
    
        /// <summary>
        /// Método preterido para adicionar um novo objeto ao EntitySet BanhoTosa. Em vez disso, experimente usar o método .Add da propriedade ObjectSet&lt;T&gt; associada.
        /// </summary>
        public void AddToBanhoTosa(BanhoTosa banhoTosa)
        {
            base.AddObject("BanhoTosa", banhoTosa);
        }
    
        /// <summary>
        /// Método preterido para adicionar um novo objeto ao EntitySet Cliente. Em vez disso, experimente usar o método .Add da propriedade ObjectSet&lt;T&gt; associada.
        /// </summary>
        public void AddToCliente(Cliente cliente)
        {
            base.AddObject("Cliente", cliente);
        }
    
        /// <summary>
        /// Método preterido para adicionar um novo objeto ao EntitySet Endereco. Em vez disso, experimente usar o método .Add da propriedade ObjectSet&lt;T&gt; associada.
        /// </summary>
        public void AddToEndereco(Endereco endereco)
        {
            base.AddObject("Endereco", endereco);
        }
    
        /// <summary>
        /// Método preterido para adicionar um novo objeto ao EntitySet EnderecoPessoa. Em vez disso, experimente usar o método .Add da propriedade ObjectSet&lt;T&gt; associada.
        /// </summary>
        public void AddToEnderecoPessoa(EnderecoPessoa enderecoPessoa)
        {
            base.AddObject("EnderecoPessoa", enderecoPessoa);
        }
    
        /// <summary>
        /// Método preterido para adicionar um novo objeto ao EntitySet Especie. Em vez disso, experimente usar o método .Add da propriedade ObjectSet&lt;T&gt; associada.
        /// </summary>
        public void AddToEspecie(Especie especie)
        {
            base.AddObject("Especie", especie);
        }
    
        /// <summary>
        /// Método preterido para adicionar um novo objeto ao EntitySet Medico. Em vez disso, experimente usar o método .Add da propriedade ObjectSet&lt;T&gt; associada.
        /// </summary>
        public void AddToMedico(Medico medico)
        {
            base.AddObject("Medico", medico);
        }
    
        /// <summary>
        /// Método preterido para adicionar um novo objeto ao EntitySet Paciente. Em vez disso, experimente usar o método .Add da propriedade ObjectSet&lt;T&gt; associada.
        /// </summary>
        public void AddToPaciente(Paciente paciente)
        {
            base.AddObject("Paciente", paciente);
        }
    
        /// <summary>
        /// Método preterido para adicionar um novo objeto ao EntitySet Pessoa. Em vez disso, experimente usar o método .Add da propriedade ObjectSet&lt;T&gt; associada.
        /// </summary>
        public void AddToPessoa(Pessoa pessoa)
        {
            base.AddObject("Pessoa", pessoa);
        }
    
        /// <summary>
        /// Método preterido para adicionar um novo objeto ao EntitySet Prontuario. Em vez disso, experimente usar o método .Add da propriedade ObjectSet&lt;T&gt; associada.
        /// </summary>
        public void AddToProntuario(Prontuario prontuario)
        {
            base.AddObject("Prontuario", prontuario);
        }
    
        /// <summary>
        /// Método preterido para adicionar um novo objeto ao EntitySet Raca. Em vez disso, experimente usar o método .Add da propriedade ObjectSet&lt;T&gt; associada.
        /// </summary>
        public void AddToRaca(Raca raca)
        {
            base.AddObject("Raca", raca);
        }
    
        /// <summary>
        /// Método preterido para adicionar um novo objeto ao EntitySet Vacina. Em vez disso, experimente usar o método .Add da propriedade ObjectSet&lt;T&gt; associada.
        /// </summary>
        public void AddToVacina(Vacina vacina)
        {
            base.AddObject("Vacina", vacina);
        }

        #endregion

    }

    #endregion

    #region Entidades
    
    /// <summary>
    /// Nenhuma Documentação de Metadados disponível.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="clinicaModel", Name="BanhoTosa")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BanhoTosa : EntityObject
    {
        #region Método de Fábrica
    
        /// <summary>
        /// Crie um novo objeto BanhoTosa.
        /// </summary>
        /// <param name="id">Valor inicial da propriedade id.</param>
        /// <param name="idPaciente">Valor inicial da propriedade idPaciente.</param>
        /// <param name="banho">Valor inicial da propriedade banho.</param>
        /// <param name="tosa">Valor inicial da propriedade tosa.</param>
        public static BanhoTosa CreateBanhoTosa(global::System.Int32 id, global::System.Int32 idPaciente, global::System.Boolean banho, global::System.Boolean tosa)
        {
            BanhoTosa banhoTosa = new BanhoTosa();
            banhoTosa.id = id;
            banhoTosa.idPaciente = idPaciente;
            banhoTosa.banho = banho;
            banhoTosa.tosa = tosa;
            return banhoTosa;
        }

        #endregion

        #region Propriedades Primitivas
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idPaciente
        {
            get
            {
                return _idPaciente;
            }
            set
            {
                OnidPacienteChanging(value);
                ReportPropertyChanging("idPaciente");
                _idPaciente = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("idPaciente");
                OnidPacienteChanged();
            }
        }
        private global::System.Int32 _idPaciente;
        partial void OnidPacienteChanging(global::System.Int32 value);
        partial void OnidPacienteChanged();
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean banho
        {
            get
            {
                return _banho;
            }
            set
            {
                OnbanhoChanging(value);
                ReportPropertyChanging("banho");
                _banho = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("banho");
                OnbanhoChanged();
            }
        }
        private global::System.Boolean _banho;
        partial void OnbanhoChanging(global::System.Boolean value);
        partial void OnbanhoChanged();
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean tosa
        {
            get
            {
                return _tosa;
            }
            set
            {
                OntosaChanging(value);
                ReportPropertyChanging("tosa");
                _tosa = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("tosa");
                OntosaChanged();
            }
        }
        private global::System.Boolean _tosa;
        partial void OntosaChanging(global::System.Boolean value);
        partial void OntosaChanged();
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> diaHora
        {
            get
            {
                return _diaHora;
            }
            set
            {
                OndiaHoraChanging(value);
                ReportPropertyChanging("diaHora");
                _diaHora = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("diaHora");
                OndiaHoraChanged();
            }
        }
        private Nullable<global::System.DateTime> _diaHora;
        partial void OndiaHoraChanging(Nullable<global::System.DateTime> value);
        partial void OndiaHoraChanged();

        #endregion

    
        #region Propriedades de Navegação
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("clinicaModel", "FK_BanhoTosa_Paciente", "Paciente")]
        public Paciente Paciente
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Paciente>("clinicaModel.FK_BanhoTosa_Paciente", "Paciente").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Paciente>("clinicaModel.FK_BanhoTosa_Paciente", "Paciente").Value = value;
            }
        }
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Paciente> PacienteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Paciente>("clinicaModel.FK_BanhoTosa_Paciente", "Paciente");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Paciente>("clinicaModel.FK_BanhoTosa_Paciente", "Paciente", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Nenhuma Documentação de Metadados disponível.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="clinicaModel", Name="Cliente")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Cliente : EntityObject
    {
        #region Método de Fábrica
    
        /// <summary>
        /// Crie um novo objeto Cliente.
        /// </summary>
        /// <param name="id">Valor inicial da propriedade id.</param>
        /// <param name="idPessoa">Valor inicial da propriedade idPessoa.</param>
        public static Cliente CreateCliente(global::System.Int32 id, global::System.Int32 idPessoa)
        {
            Cliente cliente = new Cliente();
            cliente.id = id;
            cliente.idPessoa = idPessoa;
            return cliente;
        }

        #endregion

        #region Propriedades Primitivas
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idPessoa
        {
            get
            {
                return _idPessoa;
            }
            set
            {
                OnidPessoaChanging(value);
                ReportPropertyChanging("idPessoa");
                _idPessoa = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("idPessoa");
                OnidPessoaChanged();
            }
        }
        private global::System.Int32 _idPessoa;
        partial void OnidPessoaChanging(global::System.Int32 value);
        partial void OnidPessoaChanged();

        #endregion

    
        #region Propriedades de Navegação
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("clinicaModel", "FK_Paciente_Cliente", "Paciente")]
        public EntityCollection<Paciente> Paciente
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Paciente>("clinicaModel.FK_Paciente_Cliente", "Paciente");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Paciente>("clinicaModel.FK_Paciente_Cliente", "Paciente", value);
                }
            }
        }
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("clinicaModel", "FR_Cliente_Pessoa", "Pessoa")]
        public Pessoa Pessoa
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Pessoa>("clinicaModel.FR_Cliente_Pessoa", "Pessoa").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Pessoa>("clinicaModel.FR_Cliente_Pessoa", "Pessoa").Value = value;
            }
        }
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Pessoa> PessoaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Pessoa>("clinicaModel.FR_Cliente_Pessoa", "Pessoa");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Pessoa>("clinicaModel.FR_Cliente_Pessoa", "Pessoa", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Nenhuma Documentação de Metadados disponível.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="clinicaModel", Name="Endereco")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Endereco : EntityObject
    {
        #region Método de Fábrica
    
        /// <summary>
        /// Crie um novo objeto Endereco.
        /// </summary>
        /// <param name="id">Valor inicial da propriedade id.</param>
        /// <param name="rua">Valor inicial da propriedade rua.</param>
        /// <param name="bairro">Valor inicial da propriedade bairro.</param>
        /// <param name="cidade">Valor inicial da propriedade cidade.</param>
        public static Endereco CreateEndereco(global::System.Int32 id, global::System.String rua, global::System.String bairro, global::System.String cidade)
        {
            Endereco endereco = new Endereco();
            endereco.id = id;
            endereco.rua = rua;
            endereco.bairro = bairro;
            endereco.cidade = cidade;
            return endereco;
        }

        #endregion

        #region Propriedades Primitivas
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String rua
        {
            get
            {
                return _rua;
            }
            set
            {
                OnruaChanging(value);
                ReportPropertyChanging("rua");
                _rua = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("rua");
                OnruaChanged();
            }
        }
        private global::System.String _rua;
        partial void OnruaChanging(global::System.String value);
        partial void OnruaChanged();
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String bairro
        {
            get
            {
                return _bairro;
            }
            set
            {
                OnbairroChanging(value);
                ReportPropertyChanging("bairro");
                _bairro = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("bairro");
                OnbairroChanged();
            }
        }
        private global::System.String _bairro;
        partial void OnbairroChanging(global::System.String value);
        partial void OnbairroChanged();
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String cidade
        {
            get
            {
                return _cidade;
            }
            set
            {
                OncidadeChanging(value);
                ReportPropertyChanging("cidade");
                _cidade = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("cidade");
                OncidadeChanged();
            }
        }
        private global::System.String _cidade;
        partial void OncidadeChanging(global::System.String value);
        partial void OncidadeChanged();
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String estado
        {
            get
            {
                return _estado;
            }
            set
            {
                OnestadoChanging(value);
                ReportPropertyChanging("estado");
                _estado = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("estado");
                OnestadoChanged();
            }
        }
        private global::System.String _estado;
        partial void OnestadoChanging(global::System.String value);
        partial void OnestadoChanged();
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> cep
        {
            get
            {
                return _cep;
            }
            set
            {
                OncepChanging(value);
                ReportPropertyChanging("cep");
                _cep = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("cep");
                OncepChanged();
            }
        }
        private Nullable<global::System.Int32> _cep;
        partial void OncepChanging(Nullable<global::System.Int32> value);
        partial void OncepChanged();

        #endregion

    
        #region Propriedades de Navegação
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("clinicaModel", "FK_EnderecoPessoa_Endereco", "EnderecoPessoa")]
        public EntityCollection<EnderecoPessoa> EnderecoPessoa
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EnderecoPessoa>("clinicaModel.FK_EnderecoPessoa_Endereco", "EnderecoPessoa");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EnderecoPessoa>("clinicaModel.FK_EnderecoPessoa_Endereco", "EnderecoPessoa", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Nenhuma Documentação de Metadados disponível.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="clinicaModel", Name="EnderecoPessoa")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EnderecoPessoa : EntityObject
    {
        #region Método de Fábrica
    
        /// <summary>
        /// Crie um novo objeto EnderecoPessoa.
        /// </summary>
        /// <param name="idPessoa">Valor inicial da propriedade idPessoa.</param>
        /// <param name="idEndereco">Valor inicial da propriedade idEndereco.</param>
        /// <param name="numero">Valor inicial da propriedade numero.</param>
        /// <param name="complemento">Valor inicial da propriedade complemento.</param>
        public static EnderecoPessoa CreateEnderecoPessoa(global::System.Int32 idPessoa, global::System.Int32 idEndereco, global::System.Int32 numero, global::System.String complemento)
        {
            EnderecoPessoa enderecoPessoa = new EnderecoPessoa();
            enderecoPessoa.idPessoa = idPessoa;
            enderecoPessoa.idEndereco = idEndereco;
            enderecoPessoa.numero = numero;
            enderecoPessoa.complemento = complemento;
            return enderecoPessoa;
        }

        #endregion

        #region Propriedades Primitivas
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idPessoa
        {
            get
            {
                return _idPessoa;
            }
            set
            {
                if (_idPessoa != value)
                {
                    OnidPessoaChanging(value);
                    ReportPropertyChanging("idPessoa");
                    _idPessoa = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idPessoa");
                    OnidPessoaChanged();
                }
            }
        }
        private global::System.Int32 _idPessoa;
        partial void OnidPessoaChanging(global::System.Int32 value);
        partial void OnidPessoaChanged();
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idEndereco
        {
            get
            {
                return _idEndereco;
            }
            set
            {
                if (_idEndereco != value)
                {
                    OnidEnderecoChanging(value);
                    ReportPropertyChanging("idEndereco");
                    _idEndereco = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idEndereco");
                    OnidEnderecoChanged();
                }
            }
        }
        private global::System.Int32 _idEndereco;
        partial void OnidEnderecoChanging(global::System.Int32 value);
        partial void OnidEnderecoChanged();
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 numero
        {
            get
            {
                return _numero;
            }
            set
            {
                OnnumeroChanging(value);
                ReportPropertyChanging("numero");
                _numero = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("numero");
                OnnumeroChanged();
            }
        }
        private global::System.Int32 _numero;
        partial void OnnumeroChanging(global::System.Int32 value);
        partial void OnnumeroChanged();
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String complemento
        {
            get
            {
                return _complemento;
            }
            set
            {
                OncomplementoChanging(value);
                ReportPropertyChanging("complemento");
                _complemento = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("complemento");
                OncomplementoChanged();
            }
        }
        private global::System.String _complemento;
        partial void OncomplementoChanging(global::System.String value);
        partial void OncomplementoChanged();

        #endregion

    
        #region Propriedades de Navegação
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("clinicaModel", "FK_EnderecoPessoa_Endereco", "Endereco")]
        public Endereco Endereco
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Endereco>("clinicaModel.FK_EnderecoPessoa_Endereco", "Endereco").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Endereco>("clinicaModel.FK_EnderecoPessoa_Endereco", "Endereco").Value = value;
            }
        }
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Endereco> EnderecoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Endereco>("clinicaModel.FK_EnderecoPessoa_Endereco", "Endereco");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Endereco>("clinicaModel.FK_EnderecoPessoa_Endereco", "Endereco", value);
                }
            }
        }
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("clinicaModel", "FK_EnderecoPessoa_Pessoa", "Pessoa")]
        public Pessoa Pessoa
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Pessoa>("clinicaModel.FK_EnderecoPessoa_Pessoa", "Pessoa").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Pessoa>("clinicaModel.FK_EnderecoPessoa_Pessoa", "Pessoa").Value = value;
            }
        }
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Pessoa> PessoaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Pessoa>("clinicaModel.FK_EnderecoPessoa_Pessoa", "Pessoa");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Pessoa>("clinicaModel.FK_EnderecoPessoa_Pessoa", "Pessoa", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Nenhuma Documentação de Metadados disponível.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="clinicaModel", Name="Especie")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Especie : EntityObject
    {
        #region Método de Fábrica
    
        /// <summary>
        /// Crie um novo objeto Especie.
        /// </summary>
        /// <param name="id">Valor inicial da propriedade id.</param>
        /// <param name="nome">Valor inicial da propriedade nome.</param>
        public static Especie CreateEspecie(global::System.Int32 id, global::System.String nome)
        {
            Especie especie = new Especie();
            especie.id = id;
            especie.nome = nome;
            return especie;
        }

        #endregion

        #region Propriedades Primitivas
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String nome
        {
            get
            {
                return _nome;
            }
            set
            {
                OnnomeChanging(value);
                ReportPropertyChanging("nome");
                _nome = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("nome");
                OnnomeChanged();
            }
        }
        private global::System.String _nome;
        partial void OnnomeChanging(global::System.String value);
        partial void OnnomeChanged();
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String descricao
        {
            get
            {
                return _descricao;
            }
            set
            {
                OndescricaoChanging(value);
                ReportPropertyChanging("descricao");
                _descricao = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("descricao");
                OndescricaoChanged();
            }
        }
        private global::System.String _descricao;
        partial void OndescricaoChanging(global::System.String value);
        partial void OndescricaoChanged();

        #endregion

    
        #region Propriedades de Navegação
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("clinicaModel", "FK_Raca_Especie", "Raca")]
        public EntityCollection<Raca> Raca
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Raca>("clinicaModel.FK_Raca_Especie", "Raca");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Raca>("clinicaModel.FK_Raca_Especie", "Raca", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Nenhuma Documentação de Metadados disponível.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="clinicaModel", Name="Medico")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Medico : EntityObject
    {
        #region Método de Fábrica
    
        /// <summary>
        /// Crie um novo objeto Medico.
        /// </summary>
        /// <param name="id">Valor inicial da propriedade id.</param>
        /// <param name="idPessoa">Valor inicial da propriedade idPessoa.</param>
        /// <param name="crmv">Valor inicial da propriedade crmv.</param>
        public static Medico CreateMedico(global::System.Int32 id, global::System.Int32 idPessoa, global::System.String crmv)
        {
            Medico medico = new Medico();
            medico.id = id;
            medico.idPessoa = idPessoa;
            medico.crmv = crmv;
            return medico;
        }

        #endregion

        #region Propriedades Primitivas
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idPessoa
        {
            get
            {
                return _idPessoa;
            }
            set
            {
                OnidPessoaChanging(value);
                ReportPropertyChanging("idPessoa");
                _idPessoa = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("idPessoa");
                OnidPessoaChanged();
            }
        }
        private global::System.Int32 _idPessoa;
        partial void OnidPessoaChanging(global::System.Int32 value);
        partial void OnidPessoaChanged();
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String crmv
        {
            get
            {
                return _crmv;
            }
            set
            {
                OncrmvChanging(value);
                ReportPropertyChanging("crmv");
                _crmv = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("crmv");
                OncrmvChanged();
            }
        }
        private global::System.String _crmv;
        partial void OncrmvChanging(global::System.String value);
        partial void OncrmvChanged();

        #endregion

    
        #region Propriedades de Navegação
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("clinicaModel", "FK_Medico_Pessoa", "Pessoa")]
        public Pessoa Pessoa
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Pessoa>("clinicaModel.FK_Medico_Pessoa", "Pessoa").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Pessoa>("clinicaModel.FK_Medico_Pessoa", "Pessoa").Value = value;
            }
        }
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Pessoa> PessoaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Pessoa>("clinicaModel.FK_Medico_Pessoa", "Pessoa");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Pessoa>("clinicaModel.FK_Medico_Pessoa", "Pessoa", value);
                }
            }
        }
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("clinicaModel", "FK_Prontuario_Medico", "Prontuario")]
        public EntityCollection<Prontuario> Prontuario
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Prontuario>("clinicaModel.FK_Prontuario_Medico", "Prontuario");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Prontuario>("clinicaModel.FK_Prontuario_Medico", "Prontuario", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Nenhuma Documentação de Metadados disponível.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="clinicaModel", Name="Paciente")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Paciente : EntityObject
    {
        #region Método de Fábrica
    
        /// <summary>
        /// Crie um novo objeto Paciente.
        /// </summary>
        /// <param name="id">Valor inicial da propriedade id.</param>
        /// <param name="idRaca">Valor inicial da propriedade idRaca.</param>
        /// <param name="idCliente">Valor inicial da propriedade idCliente.</param>
        /// <param name="nome">Valor inicial da propriedade nome.</param>
        public static Paciente CreatePaciente(global::System.Int32 id, global::System.Int32 idRaca, global::System.Int32 idCliente, global::System.String nome)
        {
            Paciente paciente = new Paciente();
            paciente.id = id;
            paciente.idRaca = idRaca;
            paciente.idCliente = idCliente;
            paciente.nome = nome;
            return paciente;
        }

        #endregion

        #region Propriedades Primitivas
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idRaca
        {
            get
            {
                return _idRaca;
            }
            set
            {
                OnidRacaChanging(value);
                ReportPropertyChanging("idRaca");
                _idRaca = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("idRaca");
                OnidRacaChanged();
            }
        }
        private global::System.Int32 _idRaca;
        partial void OnidRacaChanging(global::System.Int32 value);
        partial void OnidRacaChanged();
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idCliente
        {
            get
            {
                return _idCliente;
            }
            set
            {
                OnidClienteChanging(value);
                ReportPropertyChanging("idCliente");
                _idCliente = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("idCliente");
                OnidClienteChanged();
            }
        }
        private global::System.Int32 _idCliente;
        partial void OnidClienteChanging(global::System.Int32 value);
        partial void OnidClienteChanged();
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String nome
        {
            get
            {
                return _nome;
            }
            set
            {
                OnnomeChanging(value);
                ReportPropertyChanging("nome");
                _nome = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("nome");
                OnnomeChanged();
            }
        }
        private global::System.String _nome;
        partial void OnnomeChanging(global::System.String value);
        partial void OnnomeChanged();
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String cor
        {
            get
            {
                return _cor;
            }
            set
            {
                OncorChanging(value);
                ReportPropertyChanging("cor");
                _cor = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("cor");
                OncorChanged();
            }
        }
        private global::System.String _cor;
        partial void OncorChanging(global::System.String value);
        partial void OncorChanged();
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> dataNascimento
        {
            get
            {
                return _dataNascimento;
            }
            set
            {
                OndataNascimentoChanging(value);
                ReportPropertyChanging("dataNascimento");
                _dataNascimento = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("dataNascimento");
                OndataNascimentoChanged();
            }
        }
        private Nullable<global::System.DateTime> _dataNascimento;
        partial void OndataNascimentoChanging(Nullable<global::System.DateTime> value);
        partial void OndataNascimentoChanged();
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> dataEntrada
        {
            get
            {
                return _dataEntrada;
            }
            set
            {
                OndataEntradaChanging(value);
                ReportPropertyChanging("dataEntrada");
                _dataEntrada = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("dataEntrada");
                OndataEntradaChanged();
            }
        }
        private Nullable<global::System.DateTime> _dataEntrada;
        partial void OndataEntradaChanging(Nullable<global::System.DateTime> value);
        partial void OndataEntradaChanged();

        #endregion

    
        #region Propriedades de Navegação
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("clinicaModel", "FK_BanhoTosa_Paciente", "BanhoTosa")]
        public EntityCollection<BanhoTosa> BanhoTosa
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BanhoTosa>("clinicaModel.FK_BanhoTosa_Paciente", "BanhoTosa");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BanhoTosa>("clinicaModel.FK_BanhoTosa_Paciente", "BanhoTosa", value);
                }
            }
        }
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("clinicaModel", "FK_Paciente_Cliente", "Cliente")]
        public Cliente Cliente
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cliente>("clinicaModel.FK_Paciente_Cliente", "Cliente").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cliente>("clinicaModel.FK_Paciente_Cliente", "Cliente").Value = value;
            }
        }
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Cliente> ClienteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cliente>("clinicaModel.FK_Paciente_Cliente", "Cliente");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Cliente>("clinicaModel.FK_Paciente_Cliente", "Cliente", value);
                }
            }
        }
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("clinicaModel", "FK_Paciente_Raca", "Raca")]
        public Raca Raca
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Raca>("clinicaModel.FK_Paciente_Raca", "Raca").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Raca>("clinicaModel.FK_Paciente_Raca", "Raca").Value = value;
            }
        }
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Raca> RacaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Raca>("clinicaModel.FK_Paciente_Raca", "Raca");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Raca>("clinicaModel.FK_Paciente_Raca", "Raca", value);
                }
            }
        }
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("clinicaModel", "FK_Prontuario_Paciente", "Prontuario")]
        public EntityCollection<Prontuario> Prontuario
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Prontuario>("clinicaModel.FK_Prontuario_Paciente", "Prontuario");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Prontuario>("clinicaModel.FK_Prontuario_Paciente", "Prontuario", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Nenhuma Documentação de Metadados disponível.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="clinicaModel", Name="Pessoa")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Pessoa : EntityObject
    {
        #region Método de Fábrica
    
        /// <summary>
        /// Crie um novo objeto Pessoa.
        /// </summary>
        /// <param name="id">Valor inicial da propriedade id.</param>
        /// <param name="nome">Valor inicial da propriedade nome.</param>
        /// <param name="telefone">Valor inicial da propriedade telefone.</param>
        /// <param name="email">Valor inicial da propriedade email.</param>
        public static Pessoa CreatePessoa(global::System.Int32 id, global::System.String nome, global::System.String telefone, global::System.String email)
        {
            Pessoa pessoa = new Pessoa();
            pessoa.id = id;
            pessoa.nome = nome;
            pessoa.telefone = telefone;
            pessoa.email = email;
            return pessoa;
        }

        #endregion

        #region Propriedades Primitivas
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String nome
        {
            get
            {
                return _nome;
            }
            set
            {
                OnnomeChanging(value);
                ReportPropertyChanging("nome");
                _nome = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("nome");
                OnnomeChanged();
            }
        }
        private global::System.String _nome;
        partial void OnnomeChanging(global::System.String value);
        partial void OnnomeChanged();
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String telefone
        {
            get
            {
                return _telefone;
            }
            set
            {
                OntelefoneChanging(value);
                ReportPropertyChanging("telefone");
                _telefone = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("telefone");
                OntelefoneChanged();
            }
        }
        private global::System.String _telefone;
        partial void OntelefoneChanging(global::System.String value);
        partial void OntelefoneChanged();
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String email
        {
            get
            {
                return _email;
            }
            set
            {
                OnemailChanging(value);
                ReportPropertyChanging("email");
                _email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("email");
                OnemailChanged();
            }
        }
        private global::System.String _email;
        partial void OnemailChanging(global::System.String value);
        partial void OnemailChanged();

        #endregion

    
        #region Propriedades de Navegação
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("clinicaModel", "FR_Cliente_Pessoa", "Cliente")]
        public EntityCollection<Cliente> Cliente
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Cliente>("clinicaModel.FR_Cliente_Pessoa", "Cliente");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Cliente>("clinicaModel.FR_Cliente_Pessoa", "Cliente", value);
                }
            }
        }
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("clinicaModel", "FK_EnderecoPessoa_Pessoa", "EnderecoPessoa")]
        public EntityCollection<EnderecoPessoa> EnderecoPessoa
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EnderecoPessoa>("clinicaModel.FK_EnderecoPessoa_Pessoa", "EnderecoPessoa");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EnderecoPessoa>("clinicaModel.FK_EnderecoPessoa_Pessoa", "EnderecoPessoa", value);
                }
            }
        }
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("clinicaModel", "FK_Medico_Pessoa", "Medico")]
        public EntityCollection<Medico> Medico
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Medico>("clinicaModel.FK_Medico_Pessoa", "Medico");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Medico>("clinicaModel.FK_Medico_Pessoa", "Medico", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Nenhuma Documentação de Metadados disponível.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="clinicaModel", Name="Prontuario")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Prontuario : EntityObject
    {
        #region Método de Fábrica
    
        /// <summary>
        /// Crie um novo objeto Prontuario.
        /// </summary>
        /// <param name="id">Valor inicial da propriedade id.</param>
        /// <param name="idPaciente">Valor inicial da propriedade idPaciente.</param>
        /// <param name="idMedico">Valor inicial da propriedade idMedico.</param>
        /// <param name="texto">Valor inicial da propriedade texto.</param>
        public static Prontuario CreateProntuario(global::System.Int32 id, global::System.Int32 idPaciente, global::System.Int32 idMedico, global::System.String texto)
        {
            Prontuario prontuario = new Prontuario();
            prontuario.id = id;
            prontuario.idPaciente = idPaciente;
            prontuario.idMedico = idMedico;
            prontuario.texto = texto;
            return prontuario;
        }

        #endregion

        #region Propriedades Primitivas
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idPaciente
        {
            get
            {
                return _idPaciente;
            }
            set
            {
                OnidPacienteChanging(value);
                ReportPropertyChanging("idPaciente");
                _idPaciente = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("idPaciente");
                OnidPacienteChanged();
            }
        }
        private global::System.Int32 _idPaciente;
        partial void OnidPacienteChanging(global::System.Int32 value);
        partial void OnidPacienteChanged();
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idMedico
        {
            get
            {
                return _idMedico;
            }
            set
            {
                OnidMedicoChanging(value);
                ReportPropertyChanging("idMedico");
                _idMedico = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("idMedico");
                OnidMedicoChanged();
            }
        }
        private global::System.Int32 _idMedico;
        partial void OnidMedicoChanging(global::System.Int32 value);
        partial void OnidMedicoChanged();
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String texto
        {
            get
            {
                return _texto;
            }
            set
            {
                OntextoChanging(value);
                ReportPropertyChanging("texto");
                _texto = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("texto");
                OntextoChanged();
            }
        }
        private global::System.String _texto;
        partial void OntextoChanging(global::System.String value);
        partial void OntextoChanged();
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String expressaoChave
        {
            get
            {
                return _expressaoChave;
            }
            set
            {
                OnexpressaoChaveChanging(value);
                ReportPropertyChanging("expressaoChave");
                _expressaoChave = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("expressaoChave");
                OnexpressaoChaveChanged();
            }
        }
        private global::System.String _expressaoChave;
        partial void OnexpressaoChaveChanging(global::System.String value);
        partial void OnexpressaoChaveChanged();
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> data
        {
            get
            {
                return _data;
            }
            set
            {
                OndataChanging(value);
                ReportPropertyChanging("data");
                _data = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("data");
                OndataChanged();
            }
        }
        private Nullable<global::System.DateTime> _data;
        partial void OndataChanging(Nullable<global::System.DateTime> value);
        partial void OndataChanged();

        #endregion

    
        #region Propriedades de Navegação
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("clinicaModel", "FK_Prontuario_Medico", "Medico")]
        public Medico Medico
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Medico>("clinicaModel.FK_Prontuario_Medico", "Medico").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Medico>("clinicaModel.FK_Prontuario_Medico", "Medico").Value = value;
            }
        }
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Medico> MedicoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Medico>("clinicaModel.FK_Prontuario_Medico", "Medico");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Medico>("clinicaModel.FK_Prontuario_Medico", "Medico", value);
                }
            }
        }
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("clinicaModel", "FK_Prontuario_Paciente", "Paciente")]
        public Paciente Paciente
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Paciente>("clinicaModel.FK_Prontuario_Paciente", "Paciente").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Paciente>("clinicaModel.FK_Prontuario_Paciente", "Paciente").Value = value;
            }
        }
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Paciente> PacienteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Paciente>("clinicaModel.FK_Prontuario_Paciente", "Paciente");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Paciente>("clinicaModel.FK_Prontuario_Paciente", "Paciente", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Nenhuma Documentação de Metadados disponível.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="clinicaModel", Name="Raca")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Raca : EntityObject
    {
        #region Método de Fábrica
    
        /// <summary>
        /// Crie um novo objeto Raca.
        /// </summary>
        /// <param name="id">Valor inicial da propriedade id.</param>
        /// <param name="idEspecie">Valor inicial da propriedade idEspecie.</param>
        /// <param name="nome">Valor inicial da propriedade nome.</param>
        public static Raca CreateRaca(global::System.Int32 id, global::System.Int32 idEspecie, global::System.String nome)
        {
            Raca raca = new Raca();
            raca.id = id;
            raca.idEspecie = idEspecie;
            raca.nome = nome;
            return raca;
        }

        #endregion

        #region Propriedades Primitivas
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idEspecie
        {
            get
            {
                return _idEspecie;
            }
            set
            {
                OnidEspecieChanging(value);
                ReportPropertyChanging("idEspecie");
                _idEspecie = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("idEspecie");
                OnidEspecieChanged();
            }
        }
        private global::System.Int32 _idEspecie;
        partial void OnidEspecieChanging(global::System.Int32 value);
        partial void OnidEspecieChanged();
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String nome
        {
            get
            {
                return _nome;
            }
            set
            {
                OnnomeChanging(value);
                ReportPropertyChanging("nome");
                _nome = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("nome");
                OnnomeChanged();
            }
        }
        private global::System.String _nome;
        partial void OnnomeChanging(global::System.String value);
        partial void OnnomeChanged();
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String descricao
        {
            get
            {
                return _descricao;
            }
            set
            {
                OndescricaoChanging(value);
                ReportPropertyChanging("descricao");
                _descricao = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("descricao");
                OndescricaoChanged();
            }
        }
        private global::System.String _descricao;
        partial void OndescricaoChanging(global::System.String value);
        partial void OndescricaoChanged();

        #endregion

    
        #region Propriedades de Navegação
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("clinicaModel", "FK_Raca_Especie", "Especie")]
        public Especie Especie
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Especie>("clinicaModel.FK_Raca_Especie", "Especie").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Especie>("clinicaModel.FK_Raca_Especie", "Especie").Value = value;
            }
        }
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Especie> EspecieReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Especie>("clinicaModel.FK_Raca_Especie", "Especie");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Especie>("clinicaModel.FK_Raca_Especie", "Especie", value);
                }
            }
        }
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("clinicaModel", "FK_Paciente_Raca", "Paciente")]
        public EntityCollection<Paciente> Paciente
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Paciente>("clinicaModel.FK_Paciente_Raca", "Paciente");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Paciente>("clinicaModel.FK_Paciente_Raca", "Paciente", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Nenhuma Documentação de Metadados disponível.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="clinicaModel", Name="Vacina")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Vacina : EntityObject
    {
        #region Método de Fábrica
    
        /// <summary>
        /// Crie um novo objeto Vacina.
        /// </summary>
        /// <param name="id">Valor inicial da propriedade id.</param>
        /// <param name="nome">Valor inicial da propriedade nome.</param>
        /// <param name="duracao">Valor inicial da propriedade duracao.</param>
        /// <param name="tempo">Valor inicial da propriedade tempo.</param>
        public static Vacina CreateVacina(global::System.Int32 id, global::System.String nome, global::System.Int32 duracao, global::System.String tempo)
        {
            Vacina vacina = new Vacina();
            vacina.id = id;
            vacina.nome = nome;
            vacina.duracao = duracao;
            vacina.tempo = tempo;
            return vacina;
        }

        #endregion

        #region Propriedades Primitivas
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String nome
        {
            get
            {
                return _nome;
            }
            set
            {
                OnnomeChanging(value);
                ReportPropertyChanging("nome");
                _nome = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("nome");
                OnnomeChanged();
            }
        }
        private global::System.String _nome;
        partial void OnnomeChanging(global::System.String value);
        partial void OnnomeChanged();
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 duracao
        {
            get
            {
                return _duracao;
            }
            set
            {
                OnduracaoChanging(value);
                ReportPropertyChanging("duracao");
                _duracao = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("duracao");
                OnduracaoChanged();
            }
        }
        private global::System.Int32 _duracao;
        partial void OnduracaoChanging(global::System.Int32 value);
        partial void OnduracaoChanged();
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String tempo
        {
            get
            {
                return _tempo;
            }
            set
            {
                OntempoChanging(value);
                ReportPropertyChanging("tempo");
                _tempo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("tempo");
                OntempoChanged();
            }
        }
        private global::System.String _tempo;
        partial void OntempoChanging(global::System.String value);
        partial void OntempoChanged();
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String descricao
        {
            get
            {
                return _descricao;
            }
            set
            {
                OndescricaoChanging(value);
                ReportPropertyChanging("descricao");
                _descricao = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("descricao");
                OndescricaoChanged();
            }
        }
        private global::System.String _descricao;
        partial void OndescricaoChanging(global::System.String value);
        partial void OndescricaoChanged();

        #endregion

    
    }

    #endregion

    
}
